import subprocess
import logging

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(filename="files/command_executor.log", level=logging.INFO, format="%(asctime)s - %(message)s")

# –ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å)
BLACKLIST_COMMANDS = ["rm", "reboot", "shutdown", "poweroff", "mkfs", "dd", "kill", "pkill"]

def is_safe_command(command):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –±–µ–∑–æ–ø–∞—Å–Ω–∞ –ª–∏ –∫–æ–º–∞–Ω–¥–∞"""
    for blacklisted in BLACKLIST_COMMANDS:
        if blacklisted in command:
            return False
    return True

def execute_command(command):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É, –µ—Å–ª–∏ –æ–Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–∞"""
    if not is_safe_command(command):
        logging.warning(f"‚ö†Ô∏è –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã: {command}")
        return "‚õî –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞!"

    try:
        proccess = subprocess.Popen(command, shell=True)
        
        # –õ–æ–≥–∏—Ä—É–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É
        logging.info(f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ: {command}\nüìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç: {output[:200]}")
        
        return proccess
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {command} - {str(e)}")
        process = f"–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {str(e)}"
